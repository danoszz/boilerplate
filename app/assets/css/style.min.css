/*!
 * boilerplate
 * Quick way to setup your Gulp + SASS front-end environment
 * https://devign.it/boilerplate
 * @author Daan van der Zwaag
 * @version 1.0.1
 * Copyright 2017. MIT licensed.
 */
*{box-sizing:border-box;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{background:#000}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s;width:calc(100% + .5rem)}body,html{min-height:100vh;overflow:hidden;overflow-y:scroll}.noscroll{overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;height:100vh;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;width:calc(100% + .5rem)}.logo{margin-bottom:5rem;position:fixed;top:75px;right:calc(75px - .5rem)}@media (max-width:29.99em){.logo{top:37.5px;right:calc(37.5px - .5rem)}}.logo img{width:5rem}@media (max-width:29.99em){.logo img{height:3.5rem}}.nav ul{list-style:none}.col{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;height:100vh;position:fixed;color:#fff;padding:75px}.col.col--left{left:0;top:0;padding-right:0;width:calc((((100vw - 150px) / 5 - 2px) * 3) + 75px)}@media (min-width:30.01em){.col.col--left header h1{margin-left:-1px;margin-top:-10px}}.col.col--left footer{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-bottom:15px}.col.col--left footer p{margin:0}.col.col--left footer p a{color:hsla(0,0%,100%,.5);display:inline}.col.col--left footer p:hover,.col.col--left footer p:hover a{color:#fff}.col.col--right{right:-.5rem;top:0;-ms-flex-direction:row;flex-direction:row;padding-left:0;width:calc((((100vw - 150px) / 5 - 2px) * 2) + 75px + .5rem - 5px)}.col.col--right section.section--info{width:calc(((100vw - 150px) / 5 - 2px) * 2);display:-ms-flexbox;display:flex;-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end;position:relative}@media (max-width:54.99em){.col.col--right section.section--info{width:100%}}.col.col--right section.section--info .info--list ul{list-style:none;padding:0}.col.col--right section.section--info .info--list__contact{position:absolute;left:calc((100vw - 150px) / 5 - 2px)}@media (max-width:54.99em){.col.col--right section.section--info .info--list__contact{left:calc(((100vw - 150px) / 5 - 2px) * 2)}}@media (max-width:29.99em){.col.col--right section.section--info .info--list__contact{left:calc(((100vw - 150px) / 5 - 2px) * 3)}}.col.col--right section.section--sidebar{display:-ms-flexbox;display:flex;height:100%;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:end;align-items:flex-end;-ms-flex-direction:column;flex-direction:column}@media (max-width:54.99em){.col{height:auto;position:static}.col.col--left,.col.col--right{left:auto;top:auto;padding:75px}.col.col--right{width:100%}.col.col--left{width:calc((((100vw - 150px) / 5 - 2px) * 4) + 75px);padding-right:0}}@media (max-width:29.99em){.col.col--left,.col.col--right{padding:37.5px;padding-right:0}.col.col--left{width:calc((((100vw - 150px) / 5 - 2px) * 5) + 37.5px)}}#canvas{height:100%;width:100%}.logo{width:30px;color:#fff}.logo svg{width:30px;height:auto}.container--images{background-color:rgba(255,0,0,.3);position:absolute;z-index:-1;bottom:75px;left:75px;width:calc((((100vw - 150px) / 5 - 2px) * 2) + 4px);height:calc((((100vw - 150px) / 5 - 2px) * 1))}h1{font-family:Cardo,serif;font-size:30px;margin:0}@media (min-width:55.01em){h1{font-size:42px}}@media (max-width:29.99em){h1{font-size:22px}}a{color:inherit;text-decoration:none;font-weight:400;font-family:Cabin,sans-serif;font-size:14px}footer a,footer p{font-family:Source Code Pro,monospace;font-size:14px;line-height:20px}ul li{margin-bottom:.5rem}.col.col--left header h1{opacity:0;-webkit-animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;-webkit-animation-timing-function:cubic-bezier(.2,.88,.52,1);animation-timing-function:cubic-bezier(.2,.88,.52,1);-webkit-animation-delay:165ms;animation-delay:165ms}.col.col--left header h1+p{-webkit-animation-delay:.2475s;animation-delay:.2475s}.col.col--left nav{-webkit-animation-delay:264ms;animation-delay:264ms}.col.col--left footer p:first-child{-webkit-animation-delay:455.4ms;animation-delay:455.4ms}.col.col--left footer p:nth-child(2){-webkit-animation-delay:.4884s;animation-delay:.4884s}.col.col--left footer p:nth-child(3){-webkit-animation-delay:.5214s;animation-delay:.5214s}.col.col--left footer p:nth-child(4){-webkit-animation-delay:.5544s;animation-delay:.5544s}.col.col--right .info--list *{opacity:0;-webkit-animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;-webkit-animation-timing-function:cubic-bezier(.2,.88,.52,1);animation-timing-function:cubic-bezier(.2,.88,.52,1)}.col.col--right .info--list__contact h3,.col.col--right .info--list__projects h3{-webkit-animation-delay:165ms;animation-delay:165ms}.col.col--right .info--list__contact ul li:first-child,.col.col--right .info--list__projects ul li:first-child{-webkit-animation-delay:.33s;animation-delay:.33s}.col.col--right .info--list__contact ul li:nth-child(2),.col.col--right .info--list__projects ul li:nth-child(2){-webkit-animation-delay:495ms;animation-delay:495ms}.col.col--right .info--list__contact ul li:nth-child(3),.col.col--right .info--list__projects ul li:nth-child(3){-webkit-animation-delay:.66s;animation-delay:.66s}.col.col--right .info--list__contact ul li:nth-child(4),.col.col--right .info--list__projects ul li:nth-child(4){-webkit-animation-delay:825ms;animation-delay:825ms}.col.col--right .info--list__contact ul li:nth-child(5),.col.col--right .info--list__projects ul li:nth-child(5){-webkit-animation-delay:.99s;animation-delay:.99s}.col.col--right .info--list__contact ul li:nth-child(6),.col.col--right .info--list__projects ul li:nth-child(6){-webkit-animation-delay:1155ms;animation-delay:1155ms}.col.col--right .info--list__contact ul li:nth-child(7),.col.col--right .info--list__projects ul li:nth-child(7){-webkit-animation-delay:1.32s;animation-delay:1.32s}.col.col--right .coming-soon{-webkit-animation-delay:1.081344s;animation-delay:1.081344s}.logo{opacity:0;-webkit-animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;animation:.434764s cubic-bezier(.2,.88,.52,1) fadeInBottom forwards;-webkit-animation-delay:.67584s;animation-delay:.67584s;-webkit-animation-timing-function:cubic-bezier(.2,.88,.52,1);animation-timing-function:cubic-bezier(.2,.88,.52,1)}.grid--lines .lines__horizontal .line:first-child,.grid--lines .lines__vertical .line:first-child{-webkit-animation-delay:.33s;animation-delay:.33s}.grid--lines .lines__horizontal .line:nth-child(2),.grid--lines .lines__vertical .line:nth-child(2){-webkit-animation-delay:495ms;animation-delay:495ms}.grid--lines .lines__horizontal .line:nth-child(3),.grid--lines .lines__vertical .line:nth-child(3){-webkit-animation-delay:.66s;animation-delay:.66s}.grid--lines .lines__horizontal .line:nth-child(4),.grid--lines .lines__vertical .line:nth-child(4){-webkit-animation-delay:825ms;animation-delay:825ms}.grid--lines .lines__horizontal .line:nth-child(5),.grid--lines .lines__vertical .line:nth-child(5){-webkit-animation-delay:.99s;animation-delay:.99s}.grid--lines .lines__horizontal .line:nth-child(6),.grid--lines .lines__vertical .line:nth-child(6){-webkit-animation-delay:1155ms;animation-delay:1155ms}.grid--lines .lines__horizontal .line:nth-child(7),.grid--lines .lines__vertical .line:nth-child(7){-webkit-animation-delay:1.32s;animation-delay:1.32s}.grid--lines .lines__horizontal .line,.grid--lines .lines__vertical .line{-webkit-animation-timing-function:cubic-bezier(.2,.88,.52,1);animation-timing-function:cubic-bezier(.2,.88,.52,1)}@media (min-width:30.01em){.grid--lines .lines__horizontal .line{-webkit-animation:.434764s lineRight 1 both;animation:.434764s lineRight 1 both}}@media (min-width:30.01em){.grid--lines .lines__vertical .line{-webkit-animation:.434764s lineDown 1 both;animation:.434764s lineDown 1 both}}@-webkit-keyframes lineRight{0%{width:0}to{width:100%}}@keyframes lineRight{0%{width:0}to{width:100%}}@-webkit-keyframes lineDown{0%{height:0}to{height:100%}}@keyframes lineDown{0%{height:0}to{height:100%}}@-webkit-keyframes fadeInBottom{0%{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}80%{opacity:1}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes fadeInBottom{0%{opacity:0;-webkit-transform:translateY(50px);transform:translateY(50px)}80%{opacity:1}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}.grid--lines .lines__horizontal,.grid--lines .lines__vertical{display:-ms-flexbox;display:flex;pointer-events:none;-ms-flex-pack:justify;justify-content:space-between;position:fixed;z-index:-1}.grid--lines .lines__horizontal .line,.grid--lines .lines__vertical .line{background-color:#1f1f1f}.grid--lines .lines__vertical{-ms-flex-direction:row;flex-direction:row;width:calc(100% + .5rem - 150px);height:100%;top:0;left:75px}.grid--lines .lines__vertical .line{height:0;width:1px}.grid--lines .lines__horizontal{-ms-flex-direction:column;flex-direction:column;width:100%;height:calc(100% - 150px);top:75px;bottom:75px;left:0}.grid--lines .lines__horizontal .line{width:0;height:1px}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}::-webkit-scrollbar{width:.5rem}::-webkit-scrollbar-track{border-radius:0}::-webkit-scrollbar-thumb{border-radius:0;background:#fff}::-webkit-scrollbar-thumb:window-inactive{background:transparent}body{scrollbar-face-color:#fff;scrollbar-track-color:transparent}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}.mouseOver_text{margin:0 auto;z-index:2;width:100%}.mouseOver_text img{max-width:100%;max-height:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin:0 auto}#previewImage{position:absolute;display:none;color:#fff;z-index:2}#previewImage img{width:35vw}@media (min-width:55.01em){#previewImage img{width:35vh}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
