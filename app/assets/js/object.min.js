/*!
 * boilerplate
 * Quick way to setup your Gulp + SASS front-end environment
 * https://devign.it/boilerplate
 * @author Daan van der Zwaag
 * @version 1.0.1
 * Copyright 2017. MIT licensed.
 */
function init(){container=document.getElementById("canvas"),document.body.appendChild(container),camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3),camera.position.set(0,100,250),scene=new THREE.Scene;var e=new THREE.MeshPhongMaterial({color:16724736,specular:5592405,shininess:30}),n=new THREE.MeshPhongMaterial({color:7302341,specular:5592405,shininess:30}),i=new THREE.Mesh(new THREE.SphereGeometry(20,70,20),e);i.position.set(-25,100,-20),scene.add(i);var o=new THREE.Mesh(new THREE.TorusKnotGeometry(40,3,100,16),n);o.position.set(0,60,30),scene.add(o),keyLight=new THREE.DirectionalLight(16768255,1),keyLight.position.set(-100,0,100).normalize(),fillLight=new THREE.DirectionalLight(11369983,1),fillLight.position.set(100,0,100).normalize(),backLight=new THREE.DirectionalLight(15706367,1),backLight.position.set(100,0,-100).normalize(),hemLight=new THREE.HemisphereLight(16770491,16760576,.1),scene.add(hemLight),scene.add(keyLight),scene.add(fillLight),scene.add(backLight);var t=new THREE.SpotLight(16777215,1,200,20,10);t.position.set(0,150,0);var a=new THREE.Object3D;a.position.set(0,0,0),t.target=a,scene.add(t);var r=new THREE.LoadingManager;r.onProgress=function(e,n,i){console.log(e,n,i)};var d=function(e){if(e.lengthComputable){var n=e.loaded/e.total*100;console.log(Math.round(n,2)+"% downloaded")}},s=function(e){},c=new THREE.OBJLoader(r);c.load("assets/js/three/obj/devign_logo.obj",function(e){e.scale.multiplyScalar(1),e.position.y=0,scene.add(e)},d,s),renderer=new THREE.WebGLRenderer({alpha:!0}),renderer.setPixelRatio(window.devicePixelRatio),renderer.setSize(window.innerWidth,window.innerHeight),container.appendChild(renderer.domElement),document.addEventListener("mousemove",onDocumentMouseMove,!1),window.addEventListener("resize",onWindowResize,!1)}function addObjects(){}function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onDocumentMouseMove(e){mouseX=(e.clientX-windowHalfX)/10,mouseY=(e.clientY-windowHalfY)/10}function animate(){requestAnimationFrame(animate),render()}function render(){camera.position.x+=.05*(mouseX-camera.position.x),camera.position.y+=.05*(-mouseY-camera.position.y),camera.lookAt(scene.position),scene.rotation.x+=.005,scene.rotation.y+=.005,renderer.render(scene,camera)}var container,camera,scene,renderer,mouseX=0,mouseY=0,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2;init(),animate();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
